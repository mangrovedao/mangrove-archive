/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { Mangrove, MangroveInterface } from "../Mangrove";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gasprice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasmax",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
    ],
    name: "_config",
    outputs: [
      {
        internalType: "bytes32",
        name: "_global",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_local",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "density",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "overhead_gasbase",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "offer_gasbase",
        type: "uint256",
      },
    ],
    name: "activate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
    ],
    name: "best",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
    ],
    name: "config",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "monitor",
                type: "address",
              },
              {
                internalType: "bool",
                name: "useOracle",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "notify",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "gasprice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "gasmax",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "dead",
                type: "bool",
              },
            ],
            internalType: "struct MgvLib.Global",
            name: "global",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "density",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "overhead_gasbase",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "offer_gasbase",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "lock",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "best",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "last",
                type: "uint256",
              },
            ],
            internalType: "struct MgvLib.Local",
            name: "local",
            type: "tuple",
          },
        ],
        internalType: "struct MgvLib.Config",
        name: "ret",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
    ],
    name: "deactivate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "base",
            type: "address",
          },
          {
            internalType: "address",
            name: "quote",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "offerId",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "offer",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "wants",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gives",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "offerDetail",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "global",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "local",
            type: "bytes32",
          },
        ],
        internalType: "struct MgvLib.SingleOrder",
        name: "sor",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "taker",
        type: "address",
      },
    ],
    name: "flashloan",
    outputs: [
      {
        internalType: "uint256",
        name: "gasused",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "maker",
        type: "address",
      },
    ],
    name: "fund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "global",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "offer",
        type: "bytes32",
      },
    ],
    name: "isLive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "kill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "locals",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
    ],
    name: "locked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "takerWants",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "takerGives",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "fillWants",
        type: "bool",
      },
    ],
    name: "marketOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "takerWants",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "takerGives",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "fillWants",
        type: "bool",
      },
      {
        internalType: "address",
        name: "taker",
        type: "address",
      },
    ],
    name: "marketOrderFor",
    outputs: [
      {
        internalType: "uint256",
        name: "takerGot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "takerGave",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wants",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gives",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasreq",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasprice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pivotId",
        type: "uint256",
      },
    ],
    name: "newOffer",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "offerDetails",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "offerId",
        type: "uint256",
      },
    ],
    name: "offerInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "prev",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "next",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gives",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "wants",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasprice",
            type: "uint256",
          },
        ],
        internalType: "struct MgvLib.Offer",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "gasreq",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "overhead_gasbase",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "offer_gasbase",
            type: "uint256",
          },
        ],
        internalType: "struct MgvLib.OfferDetail",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "offers",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "offerId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "deprovision",
        type: "bool",
      },
    ],
    name: "retractOffer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "density",
        type: "uint256",
      },
    ],
    name: "setDensity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "overhead_gasbase",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "offer_gasbase",
        type: "uint256",
      },
    ],
    name: "setGasbase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gasmax",
        type: "uint256",
      },
    ],
    name: "setGasmax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gasprice",
        type: "uint256",
      },
    ],
    name: "setGasprice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "governanceAddress",
        type: "address",
      },
    ],
    name: "setGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "monitor",
        type: "address",
      },
    ],
    name: "setMonitor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "notify",
        type: "bool",
      },
    ],
    name: "setNotify",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "useOracle",
        type: "bool",
      },
    ],
    name: "setUseOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vaultAddress",
        type: "address",
      },
    ],
    name: "setVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "offerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "takerWants",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "takerGives",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasreq",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "fillWants",
        type: "bool",
      },
    ],
    name: "snipe",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "offerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "takerWants",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "takerGives",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasreq",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "fillWants",
        type: "bool",
      },
      {
        internalType: "address",
        name: "taker",
        type: "address",
      },
    ],
    name: "snipeFor",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "takerGot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "takerGave",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
      {
        internalType: "uint256[4][]",
        name: "targets",
        type: "uint256[4][]",
      },
      {
        internalType: "bool",
        name: "fillWants",
        type: "bool",
      },
    ],
    name: "snipes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
      {
        internalType: "uint256[4][]",
        name: "targets",
        type: "uint256[4][]",
      },
      {
        internalType: "bool",
        name: "fillWants",
        type: "bool",
      },
      {
        internalType: "address",
        name: "taker",
        type: "address",
      },
    ],
    name: "snipesFor",
    outputs: [
      {
        internalType: "uint256",
        name: "successes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "takerGot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "takerGave",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wants",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gives",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasreq",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasprice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pivotId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "offerId",
        type: "uint256",
      },
    ],
    name: "updateOffer",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "bool",
        name: "noRevert",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

export class Mangrove__factory {
  static readonly abi = _abi;
  static createInterface(): MangroveInterface {
    return new utils.Interface(_abi) as MangroveInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Mangrove {
    return new Contract(address, _abi, signerOrProvider) as Mangrove;
  }
}
