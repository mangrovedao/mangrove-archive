/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { MgvReader, MgvReaderInterface } from "../MgvReader";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_mgv",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "num_offers",
        type: "uint256",
      },
    ],
    name: "book",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "prev",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "next",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gives",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "wants",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasprice",
            type: "uint256",
          },
        ],
        internalType: "struct MgvLib.Offer[]",
        name: "",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "gasreq",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "overhead_gasbase",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "offer_gasbase",
            type: "uint256",
          },
        ],
        internalType: "struct MgvLib.OfferDetail[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "num_offers",
        type: "uint256",
      },
    ],
    name: "packed_book",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class MgvReader__factory {
  static readonly abi = _abi;
  static createInterface(): MgvReaderInterface {
    return new utils.Interface(_abi) as MgvReaderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MgvReader {
    return new Contract(address, _abi, signerOrProvider) as MgvReader;
  }
}
