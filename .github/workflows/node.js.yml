# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI

on:
  push:
    branches: [ master, feature/**, issue/** ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      NODE_ENV: test

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:

    # == Git checkout ==
    - name: Checkout
      uses: actions/checkout@v2
      # Workaround for https://github.com/npm/cli/issues/2610
      with:
        persist-credentials: false


    - name: Reconfigure git to use HTTP authentication
      # Workaround for https://github.com/npm/cli/issues/2610    
      run: >
        git config --global url."https://github.com/".insteadOf
        ssh://git@github.com/

    # == npm setup ==
    - name: Use Node.js ${{ matrix.node-version }} (caching npm)
      # Ensure use configured Node.js version
      # - refactored into the two following mutually exclusive steps,
      #   to workaround https://github.com/nektos/act/issues/329
      if: ${{ !env.ACT }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Use Node.js ${{ matrix.node-version }} (no cache)
      if: ${{ env.ACT }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        
    - run: npm ci

    # == Solidity compile and run test suite solidity ==

    - name: Solidity Compile
      run: npx hardhat compile

    - name: Solidity Tests
      run: npm run test:solidity

    - name: Solidity Test Report
      uses: dorny/test-reporter@v1
      if: ${{ !env.ACT }} && (success() || failure())              # run this step even if previous step failed
      with:
        name: Solidity Tests                  # Name of the check run which will be created
        path: solidity-mocha-test-report.json # Path to test results
        reporter: mocha-json                  # Format of test results

    # == Run test suite Ethereum mainnet ==

    - name: Ethereum mainnet Tests
      run: npm run test:ethereum-mainnet
      env:
        ETHEREUM_NODE_URL: ${{ secrets.ETHEREUM_NODE_URL }}

    - name: Ethereum mainnet Test Report
      uses: dorny/test-reporter@v1
      if: ${{ !env.ACT }} && (success() || failure())              # run this step even if previous step failed
      with:
        name: Ethereum mainnet Tests          # Name of the check run which will be created
        path: ethereum-mainnet-mocha-test-report.json # Path to test results
        reporter: mocha-json                  # Format of test results


    # == Run test suite Polygon mainnet == 

    - name: Polygon mainnet Tests
      run: npm run test:polygon-mainnet
      env:
        POLYGON_NODE_URL: ${{ secrets.POLYGON_NODE_URL }}
    - name: Polygon mainnet Test Report
      uses: dorny/test-reporter@v1
      if: ${{ !env.ACT }} && (success() || failure())              # run this step even if previous step failed
      with:
        name: Polygon mainnet Tests           # Name of the check run which will be created
        path: polygon-mainnet-mocha-test-report.json # Path to test results
        reporter: mocha-json                  # Format of test results


    # == Documentation == 

    - run: npm run doc

    - name: Archive documentation
      uses: actions/upload-artifact@v2
      with:
        name: documentation
        path: doc/