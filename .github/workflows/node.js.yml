name: CI

on:
  push:
    branches: [ master, feature/**, issue/** ]
  pull_request:
    branches: [ master ]

env:
  NODE_ENV: test
  working-directory: packages/mangrove-solidity
  version: "0.1.0-g${{ github.sha }}"
  package: "@${{ github.repository }}"
  registry_url: "https://npm.pkg.github.com"
  scope: "${{ github.repository_owner }}"  

jobs:
  # ==== Job: Setup, build and test Mangrove
  mangrove-solidity:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{env.working-directory}}

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:

    # == Git checkout ==
    - name: Checkout
      uses: actions/checkout@v2
      # Workaround for https://github.com/npm/cli/issues/2610
      with:
        persist-credentials: false


    - name: Reconfigure git to use HTTP authentication
      # Workaround for https://github.com/npm/cli/issues/2610    
      run: >
        git config --global url."https://github.com/".insteadOf
        ssh://git@github.com/

    # == yarn setup ==
    - name: Yarn setup (caching yarn dependencies)
      # - refactored into the two following mutually exclusive steps,
      #   to workaround https://github.com/nektos/act/issues/329
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        registry-url: ${{ env.registry_url }}
        always-auth: true
        scope: ${{ env.scope }}

    # - run: echo '"@giry-dev:registry" "https://npm.pkg.github.com/"' >> .yarnrc

    - run: yarn install --immutable
      working-directory: . # Yarn must run in root to ensure monorepo setup
      env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # == Solidity compile and run test suite solidity ==

    - name: Solidity Compile
      run: yarn run build-this-package

    - name: Save status of Mangrove Solidity build
      # So we can fail-fast and drop the X Test Report steps, if build fails
      # A tiny bit hacky, but it's simple and works
      run: echo "mangrove_built=true" >> $GITHUB_ENV

    - name: Save status of Mangrove Solidity build
      # So we can fail-fast and drop the X Test Report steps, if build fails
      # A tiny bit hacky, but it's simple and works
      run: echo "mangrove_built=true" >> $GITHUB_ENV

    - run: yarn npm publish --access restricted --tag ${{ env.version }}
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # TODO: Temp disabled to save time -->      
    # - name: Solidity Tests
    #   run: yarn run test:solidity

    # - name: Solidity Test Report
    #   uses: dorny/test-reporter@v1
    #   if: ${{ env.mangrove_built && (success() || failure()) }}
    #   with:
    #     name: Solidity Tests                  # Name of the check run which will be created
    #     path: ${{env.working-directory}}/solidity-mocha-test-report.json # Path to test results
    #     reporter: mocha-json                  # Format of test results

    # == Run test suite Ethereum mainnet ==

    # TODO: Temp disabled to save time -->

    # - name: Ethereum mainnet Tests
    #   run: yarn run test:ethereum-mainnet
    #   env:
    #     ETHEREUM_NODE_URL: ${{ secrets.ETHEREUM_NODE_URL }}

    # - name: Ethereum mainnet Test Report
    #   uses: dorny/test-reporter@v1
    #   if: ${{ env.mangrove_built && (success() || failure()) }}
    #   with:
    #     name: Ethereum mainnet Tests          # Name of the check run which will be created
    #     path: ${{env.working-directory}}/ethereum-mainnet-mocha-test-report.json # Path to test results
    #     reporter: mocha-json                  # Format of test results


    # == Run test suite Polygon mainnet == 

    # TODO: Temp disabled to save time -->    
    # - name: Polygon mainnet Tests
    #   run: yarn run test:polygon-mainnet
    #   env:
    #     POLYGON_NODE_URL: ${{ secrets.POLYGON_NODE_URL }}

    # - name: Polygon mainnet Test Report
    #   uses: dorny/test-reporter@v1
    #   if: ${{ env.mangrove_built && (success() || failure()) }}
    #   with:
    #     name: Polygon mainnet Tests           # Name of the check run which will be created
    #     path: ${{env.working-directory}}/polygon-mainnet-mocha-test-report.json # Path to test results
    #     reporter: mocha-json                  # Format of test results

    # - name: Zip dist
    #   uses: montudor/action-zip@v1
    #   with: 
    #     args: zip -qq -r mangrove-solidity-dist.zip ${{env.working-directory}}/dist

    # - name: Cache mangrove-solidity dist as artifact
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: mangrove-solidity-dist.zip
    #     path: mangrove-solidity-dist.zip




  # ==== Job: Mangrove documentation ====
  mangrove-solidity-doc:
    needs: mangrove-solidity
    
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{env.working-directory}}    

    steps:

    # == Git checkout ==
    - name: Checkout
      uses: actions/checkout@v2
      # Workaround for https://github.com/npm/cli/issues/2610
      with:
        persist-credentials: false


    - name: Reconfigure git to use HTTP authentication
      # Workaround for https://github.com/npm/cli/issues/2610    
      run: >
        git config --global url."https://github.com/".insteadOf
        ssh://git@github.com/

    # == yarn setup ==
    - name: Yarn setup (caching yarn dependencies)
      # - refactored into the two following mutually exclusive steps,
      #   to workaround https://github.com/nektos/act/issues/329
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        
    - run: yarn install --immutable
      working-directory: . # Yarn must run in root to ensure monorepo setup

    # == create docs ==

    - run: yarn run doc

    - name: Archive documentation
      uses: actions/upload-artifact@v2
      with:
        name: documentation
        path: ${{env.working-directory}}/doc/

  # ==== Job: mangrove.js ====
  mangrove-js:
    needs: mangrove-solidity

    runs-on: ubuntu-latest

    env:
      working-directory: packages/mangrove.js

    defaults:
      run:
        working-directory: packages/mangrove.js

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:

    # == Git checkout ==
    - name: Checkout
      uses: actions/checkout@v2
      # Workaround for https://github.com/npm/cli/issues/2610
      with:
        persist-credentials: false


    - name: Reconfigure git to use HTTP authentication
      # Workaround for https://github.com/npm/cli/issues/2610    
      run: >
        git config --global url."https://github.com/".insteadOf
        ssh://git@github.com/

    # == yarn setup ==
    - name: Yarn setup (caching yarn dependencies)
      # - refactored into the two following mutually exclusive steps,
      #   to workaround https://github.com/nektos/act/issues/329
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        
    - run: yarn install --immutable
      working-directory: . # Yarn must run in root to ensure monorepo setup

    # == download artefact ==

    # - name: Download cached mangrove-solidity dist
    #   uses: actions/download-artifact@v2
    #   with:
    #     name: mangrove-solidity-dist.zip

    # - name: Unzip artifact
    #   uses: montudor/action-zip@v1
    #   with:
    #     args: unzip -qq mangrove-solidity-dist.zip

    # == Build Mangrove.js == 
    - name: Mangrove.js build
      run: yarn run build-this-package

    # == Run test suite Mangrove.js == 

    - name: Mangrove.js Tests
      run: yarn run test


    # TODO: Only run if mangrove.js build went ok. 
    - name: Mangrove.js Test Report
      uses: dorny/test-reporter@v1
      if: ${{ (success() || failure()) }}
      with:
        name: Mangrove.js Tests               # Name of the check run which will be created
        path: ${{env.working-directory}}/mangrovejs-mocha-test-report.json # Path to test results
        reporter: mocha-json                  # Format of test results

    # TODO: to move to separate job -->

    # == Build Cleaning Bot Naive == 
    - name: Cleaning Bot Naive - Build
      run: yarn run build-this-package
      working-directory: packages/cleaning-bot-naive # TODO This build is in a different package than the previous - we should find a better way to handle working directories


    # == Run test suite Cleaning Bot Naive == 
    # TODO: Only run if mangrove.js build went ok.    
    - name: Cleaning Bot Naive - Tests
      run: yarn run test
      working-directory: packages/cleaning-bot-naive # TODO These tests are in a different package than the previous - we should find a better way to handle working directories

    - name: Cleaning Bot Naive - Test Report
      uses: dorny/test-reporter@v1
      if: ${{ (success() || failure()) }}
      with:
        name: Cleaning Bot Naive - Tests                   # Name of the check run which will be created
        path: packages/cleaning-bot-naive/cleaning-bot-naive-mocha-test-report.json # Path to test results
        reporter: mocha-json                               # Format of test results
        